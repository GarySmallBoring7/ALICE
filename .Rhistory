# A histogram of the number of productive TCRs in each sample
hist_Sample<-ggplot(Sample_entries)+
geom_histogram(aes(x = Freq, y = ..density..), fill="#69b3a2" ,alpha = 0.8) +
#geom_label( aes(x=10^4.5, y=0.5, label="29 Patients"), color="#69b3a2") +
scale_x_continuous(trans = log10_trans(),
breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x)))+
theme_classic() +
xlab("Number of TCRs")+
ggtitle("Histogram of Number of TCR counts of \n tumor samples from 29 patients pre- and on- nivolumab treatment")
hist_Sample
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = 'Y:/Files/JHU/Labs/Git_Repos/Cancer_Antigen')
library(dplyr)
library(stringr)
library(tidyr)
library(patchwork)
library(pheatmap)
library(readxl)
library(immunarch)
library(circlize)
library(networkD3)
library(htmlwidgets)
library(ggalluvial)
# Get VDJdb data for viruses. We only include human TCRB chain here.
knitr::opts_knit$set(root.dir = dirname(dirname(getwd())))
VDJ_TCR<-read.csv('Y:/Files/JHU/Labs/Git_Repos/Cancer_Antigen/Databases/VDJdb/VDJdb.tsv',
sep = '\t')
VDJ_TCR<-subset(VDJ_TCR,select = c(2:12))
VDJ_TCRB<-unique(VDJ_TCR[VDJ_TCR['Gene']=='TRB' & VDJ_TCR['Species']=='HomoSapiens' &VDJ_TCR['Epitope.species']!='HomoSapiens',]) #32286 entries
# Read Stromnes data
knitr::opts_knit$set(root.dir = dirname(dirname(getwd())))
file_dir<-("Y:/Files/JHU/Labs/Git_Repos/Cancer_Antigen/Databases/Papers/Pancreatic/Stromnes/Tumor")
file_list<-list.files(file_dir,full.names = TRUE)
# function to read the tumor files and concatenate into one dataframe. Only keep TRB and productive cdr3
Read_Adaptive_TCR<- function(f_path){
# Organize File name
source_name <-basename(f_path)
T_raw <- read.csv(f_path,sep = '\t')
T_raw<-subset(T_raw,select = c('sample_name','productive_frequency','amino_acid',
'frame_type', #Used to select productive frames
'v_resolved','d_resolved','j_resolved'))
T_processed<-unique(T_raw[T_raw$frame_type=='In',])
#T_processed <-cbind(T_processed,'Source' = rep(source_name,times = nrow(T_processed)))
}
Stromnes_TCR<- data.frame()
for ( i in 1:length(file_list)){
Stromnes_TCR<-rbind(Stromnes_TCR,Read_Adaptive_TCR(file_list[i]))
}
Shared_VDJ<-VDJ_TCRB[VDJ_TCRB$CDR3 %in% Stromnes_TCR$amino_acid,] #851 entries
Shared_Stromnes<-Stromnes_TCR[Stromnes_TCR$amino_acid %in% VDJ_TCRB$CDR3,] #905 entries out of 50629
Shared_Stromnes[Shared_Stromnes==""]<-"N.A." #Some entries are not applicable
Update_SharedIdentity<-function(Shared_VDJ_df,Shared_target_df,target_key = 'amino_acid'){
# Generate a 0/1 matrix to signify whether the target TCR is cross-reactive to the viral epitopes.
# cr_mtx<-matrix(0,length(nrow(Shared_target_df)),length(unique(Shared_VDJ_df)))
# colnames(cr_mtx)<-unique(Shared_VDJ_df$Epitope.species)
target_df_new<-cbind(Shared_target_df,'cross_reactive_viral' = rep('',times = nrow(Shared_target_df)))
for(i in c(1:nrow(Shared_target_df))){
cross_VDJ_i <-Shared_VDJ_df[Shared_VDJ_df['CDR3']==target_df_new[[target_key]][i],]
#cr_mtx[i,unique(cross_VDJ_i$Epitope.species)]<-1
target_df_new$cross_reactive_viral[i] <- paste(sort(unique(cross_VDJ_i$Epitope.species)),collapse = '+')
}
target_df_new$cross_reactive_viral<-factor(target_df_new$cross_reactive_viral)
return(target_df_new)
}
Shared_Stromnes_annotated <-Update_SharedIdentity(Shared_VDJ,Shared_Stromnes)
file_list_blood<-list.files("Y:/Files/JHU/Labs/Git_Repos/Cancer_Antigen/Databases/Papers/Pancreatic/Stromnes/Blood",full.names = TRUE)
Stromnes_TCR_Blood<- data.frame()
for ( i in 1:length(file_list_blood)){
Stromnes_TCR_Blood<-rbind(Stromnes_TCR_Blood,Read_Adaptive_TCR(file_list_blood[i]))
}
Shared_Stromnes_annotated['Unique to TIL'] <- rep('Shared with Blood', times = nrow(Shared_Stromnes_annotated))
for(i in 1:nrow(Shared_Stromnes_annotated)){
if(Shared_Stromnes_annotated$amino_acid[i] %in% Stromnes_TCR_Blood$amino_acid){
Shared_Stromnes_annotated$'Unique to TIL'[i]<-"Unique to TIL"
}
}
Shared_Stromnes_annotated$`Unique to TIL`<-factor(Shared_Stromnes_annotated$'Unique to TIL')
Shared_Stromnes_annotated<-Shared_Stromnes_annotated[
order(-Shared_Stromnes_annotated$productive_frequency),
]
write.csv(Shared_Stromnes_annotated,file = 'Shared_Stromnes_Tumor_Annotated_VDJdb.csv')
links <- data.frame(
source=Shared_Stromnes_annotated$'Unique to TIL',
target=Shared_Stromnes_annotated$cross_reactive_viral,
value=Shared_Stromnes_annotated$value #Shared_Stromnes_annotated$normalized_value/sum(Shared_Stromnes_annotated$normalized_value)
)
Shared_Stromnes_annotated$value<-Shared_Stromnes_annotated$productive_frequency/sum(Shared_Stromnes_annotated$productive_frequency)
CR_identities<-data.frame('Identity'=names(table(Shared_Stromnes_annotated$cross_reactive_viral)),'Entries' = 0)
for(i in 1:nrow(CR_identities)){
Idents<-strsplit(CR_identities$Identity[i],"+",fixed = T)[[1]]
Temp_dfs<-list()
for(j in 1:length(Idents)){
Temp_dfs[[j]]<-VDJ_TCRB[VDJ_TCRB$Epitope.species==Idents[j],]
}
if(j ==1){CR_identities$Entries[i]<-nrow(Temp_dfs[[1]])}
if(j ==2){CR_identities$Entries[i]<-length(intersect(Temp_dfs[[1]]$CDR3,
Temp_dfs[[2]]$CDR3))}
if(j ==3){CR_identities$Entries[i]<-length(intersect(intersect(Temp_dfs[[1]]$CDR3,
Temp_dfs[[2]]$CDR3),
Temp_dfs[[3]]$CDR3))}
}
CR_identities$Identity<-factor(CR_identities$Identity)
for(i in 1:nrow(Shared_Stromnes_annotated)){
Shared_Stromnes_annotated$normalized_value[i]<-
Shared_Stromnes_annotated$value[i]/
(CR_identities$Entries[CR_identities$Identity==Shared_Stromnes_annotated$cross_reactive_viral[i]])
}
links <- data.frame(
source=Shared_Stromnes_annotated$'Unique to TIL',
target=Shared_Stromnes_annotated$cross_reactive_viral,
value=Shared_Stromnes_annotated$value #Shared_Stromnes_annotated$normalized_value/sum(Shared_Stromnes_annotated$normalized_value)
)
links2<-data.frame(
source=Shared_Stromnes_annotated$sample_name,
target=Shared_Stromnes_annotated$`Unique to TIL`,
value=Shared_Stromnes_annotated$value
)
links<-rbind(links,links2)
# rownames(links)<-paste(Shared_Stromnes_annotated$amino_acid,
#                         Shared_Stromnes_annotated$v_resolved,
#                        Shared_Stromnes_annotated$d_resolved,
#                         Shared_Stromnes_annotated$j_resolved,
#                        Shared_Stromnes_annotated$sample_name,
#                        Shared_Stromnes_annotated$productive_frequency,
#                        sep = "_")
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
# Plot Sankey
p <- sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
fontSize = 10,
nodeWidth = 20,
fontFamily = 10,
sinksRight=F)
SankeyPlot<-onRender(
p,
'
function(el, x) {
d3.selectAll(".node text")
.filter(function(d) { return d.name.startsWith("Shared with Blood"); })
.attr("text-anchor", "end")
.attr("x", 40);
d3.selectAll(".node text")
.filter(function(d) { return d.name.startsWith("Unique to TIL"); })
.attr("text-anchor", "end")
.attr("x", 40);
d3.selectAll(".node text")
.filter(function(d) { return d.name.startsWith("PC19"); })
.attr("text-anchor", "end")
.attr("x", -20);
}
'
)
saveWidget(SankeyPlot, file=paste0( getwd(), "/sankey_new_Sampleseee.html"))
getwd()
saveWidget(SankeyPlot, file=paste0( getwd(), "/sankey_new_Sampleseee.html"))
p
file=paste0( getwd(), "/sankey_new_Sampleseee.html")
file
saveWidget(SankeyPlot, file=paste0( getwd(), "/sankey_new_Sampleseee.html"))
SankeyPlot
View(CR_identities)
Shared_Stromnes_annotated_alluvium<-Shared_Stromnes_annotated
Shared_Stromnes_annotated_alluvium$cross_reactive_viral[
! Shared_Stromnes_annotated_alluvium$cross_reactive_viral %in%
c("CMV","CMV+EBV","EBV","HIV-1","YFV","InfluenzaA","SARS-CoV-2")
] <-"Others"
View(Shared_Stromnes_annotated_alluvium)
Shared_Stromnes_annotated_alluvium$cross_reactive_viral[
! Shared_Stromnes_annotated_alluvium$cross_reactive_viral %in%
c("CMV","CMV+EBV","EBV","HIV-1","YFV","InfluenzaA","SARS-CoV-2")
] ="Others"
levels(Shared_Stromnes_annotated_alluvium$cross_reactive_viral)
levels(Shared_Stromnes_annotated_alluvium$cross_reactive_viral)<-c(levels(Shared_Stromnes_annotated_alluvium$cross_reactive_viral),"Other")
Shared_Stromnes_annotated_alluvium$cross_reactive_viral[
! Shared_Stromnes_annotated_alluvium$cross_reactive_viral %in%
c("CMV","CMV+EBV","EBV","HIV-1","YFV","InfluenzaA","SARS-CoV-2")
] <-"Other"
CR_alluvium<-ggplot(Shared_Stromnes_annotated,
aes(y = productive_frequency*100,
axis1 = sample_name,
axis2 = `Unique to TIL`,
axis3 = cross_reactive_viral))+
scale_x_discrete(limits = c('Sample',"Uniqueness","Cross-reactive Identity"),expand = c(0.2,0.05))+
xlab("Shared TCRs")+
ylab("Percentage in Sample (%)")+
geom_alluvium(aes(fill = `Unique to TIL`))+
geom_stratum() +
geom_text(stat = "stratum",aes(label = after_stat(stratum)))+
theme_minimal()+
ggtitle("Cross-reactive TCR in tumor samples")
CR_alluvium<-ggplot(Shared_Stromnes_annotated_alluvium,
aes(y = productive_frequency*100,
axis1 = sample_name,
axis2 = `Unique to TIL`,
axis3 = cross_reactive_viral))+
scale_x_discrete(limits = c('Sample',"Uniqueness","Cross-reactive Identity"),expand = c(0.2,0.05))+
xlab("Shared TCRs")+
ylab("Percentage in Sample (%)")+
geom_alluvium(aes(fill = `Unique to TIL`))+
geom_stratum() +
geom_text(stat = "stratum",aes(label = after_stat(stratum)))+
theme_minimal()+
ggtitle("Cross-reactive TCR in tumor samples")
CR_alluvium
CR_alluvium<-ggplot(Shared_Stromnes_annotated_alluvium,
aes(y = productive_frequency*100,
axis1 = sample_name,
axis2 = `Unique to TIL`,
axis3 = cross_reactive_viral))+
scale_x_discrete(limits = c('Sample',"Uniqueness","Cross-reactive Identity"),expand = c(0.2,0.05))+
#xlab("Shared TCRs")+
ylab("Percentage in Sample (%)")+
geom_alluvium(aes(fill = `Unique to TIL`))+
geom_stratum() +
geom_text(stat = "stratum",aes(label = after_stat(stratum)))+
theme_minimal()+
ggtitle("Cross-reactive TCR in tumor samples")
CR_alluvium
CR_alluvium<-ggplot(Shared_Stromnes_annotated_alluvium,
aes(y = productive_frequency*100,
axis1 = sample_name,
axis2 = `Unique to TIL`,
axis3 = cross_reactive_viral))+
scale_x_discrete(limits = c('Sample',"Uniqueness","Cross-reactive Identity"),expand = c(0.2,0.05))+
#xlab("Shared TCRs")+
ylab("Percentage in Sample (%)")+
geom_alluvium(aes(fill = `Unique to TIL`))+
geom_stratum() +
geom_text(stat = "stratum",aes(label = after_stat(stratum)))+
theme_minimal()+
ggtitle("Cross-reactive TCR in Tumor Samples","Categorized by appearance in any blood samples")
CR_alluvium
vignette(topic = "ggalluvial", package = "ggalluvial")
Shared_Stromnes_annotated_alluvium$sample_name<-str_remove(Shared_Stromnes_annotated_alluvium$sample_name,"PC19-")
CR_alluvium<-ggplot(Shared_Stromnes_annotated_alluvium,
aes(y = productive_frequency*100,
axis1 = sample_name,
axis2 = `Unique to TIL`,
axis3 = cross_reactive_viral))+
scale_x_discrete(limits = c('Sample',"Uniqueness","Cross-reactive Identity"),expand = c(0.2,0.05))+
#xlab("Shared TCRs")+
ylab("Percentage in Sample (%)")+
geom_alluvium(aes(fill = `Unique to TIL`))+
geom_stratum(width = 1/12, fill = "black", color = "grey") +
geom_text(stat = "stratum",aes(label = after_stat(stratum)))+
theme_minimal()+
ggtitle("Cross-reactive TCR in Tumor Samples","Categorized by appearance in any blood samples")
CR_alluvium
CR_alluvium<-ggplot(Shared_Stromnes_annotated_alluvium,
aes(y = productive_frequency*100,
axis1 = sample_name,
axis2 = `Unique to TIL`,
axis3 = cross_reactive_viral))+
scale_x_discrete(limits = c('Sample',"Uniqueness","Cross-reactive Identity"),expand = c(0.2,0.05))+
#xlab("Shared TCRs")+
ylab("Percentage in Sample (%)")+
geom_alluvium(aes(fill = `Unique to TIL`))+
geom_stratum(color = "grey") +
geom_text(stat = "stratum",aes(label = after_stat(stratum)))+
theme_minimal()+
ggtitle("Cross-reactive TCR in Tumor Samples","Categorized by appearance in any blood samples")
CR_alluvium
Shared_Stromnes_annotated_alluvium$cross_reactive_viral[
! Shared_Stromnes_annotated_alluvium$cross_reactive_viral %in%
c("CMV","CMV+EBV","EBV","HIV-1","YFV","InfluenzaA")
] <-"Other"
Shared_Stromnes_annotated_alluvium<-Shared_Stromnes_annotated
levels(Shared_Stromnes_annotated_alluvium$cross_reactive_viral)<-c(levels(Shared_Stromnes_annotated_alluvium$cross_reactive_viral),"Other")
Shared_Stromnes_annotated_alluvium$cross_reactive_viral[
! Shared_Stromnes_annotated_alluvium$cross_reactive_viral %in%
c("CMV","CMV+EBV","EBV","HIV-1","YFV","InfluenzaA")
] <-"Other"
Shared_Stromnes_annotated_alluvium$sample_name<-str_remove(Shared_Stromnes_annotated_alluvium$sample_name,"PC19-")
Shared_Stromnes_annotated_alluvium<-Shared_Stromnes_annotated
levels(Shared_Stromnes_annotated_alluvium$cross_reactive_viral)<-c(levels(Shared_Stromnes_annotated_alluvium$cross_reactive_viral),"Other")
Shared_Stromnes_annotated_alluvium$cross_reactive_viral[
! Shared_Stromnes_annotated_alluvium$cross_reactive_viral %in%
c("CMV","CMV+EBV","EBV","HIV-1","YFV","InfluenzaA")
] <-"Other"
Shared_Stromnes_annotated_alluvium$sample_name<-str_remove(Shared_Stromnes_annotated_alluvium$sample_name,"PC19-")
```{r}
CR_alluvium<-ggplot(Shared_Stromnes_annotated_alluvium,
aes(y = productive_frequency*100,
axis1 = sample_name,
axis2 = `Unique to TIL`,
axis3 = cross_reactive_viral))+
scale_x_discrete(limits = c('Sample',"Uniqueness","Cross-reactive Identity"),expand = c(0.2,0.05))+
#xlab("Shared TCRs")+
ylab("Percentage in Sample (%)")+
geom_alluvium(aes(fill = `Unique to TIL`))+
geom_stratum(color = "grey") +
geom_text(stat = "stratum",aes(label = after_stat(stratum)))+
theme_minimal()+
ggtitle("Cross-reactive TCR in Tumor Samples","Categorized by appearance in any blood samples")
CR_alluvium
CR_alluvium<-ggplot(Shared_Stromnes_annotated_alluvium,
aes(y = productive_frequency*100,
axis1 = sample_name,
axis2 = `Unique to TIL`,
axis3 = cross_reactive_viral))+
scale_x_discrete(limits = c('Sample',"Uniqueness","Cross-reactive Identity"),expand = c(0.2,0.05))+
#xlab("Shared TCRs")+
ylab("Percentage in Sample (%)")+
geom_alluvium(aes(fill = `Unique to TIL`))+
geom_stratum(color = "grey") +
geom_text(stat = "stratum",aes(label = after_stat(stratum)))+
theme_minimal()+
ggtitle("Cross-reactive TCR in Tumor Samples","Categorized by appearance in any blood samples")+
theme(text = element_text(size = 20),
plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(margin = margin(10, 0, 0, 0)),
axis.title.y = element_text(margin = margin(0, 10, 0, 0)),
axis.text.x = element_text(margin = margin(5, 0, 0, 0)),
axis.text.y = element_text(margin = margin(0, 5, 0, 0)))
CR_alluvium
CR_alluvium<-ggplot(Shared_Stromnes_annotated_alluvium,
aes(y = productive_frequency*100,
axis1 = sample_name,
axis2 = `Unique to TIL`,
axis3 = cross_reactive_viral))+
scale_x_discrete(limits = c('Sample',"Uniqueness","Cross-reactive Identity"),expand = c(0.2,0.05))+
#xlab("Shared TCRs")+
ylab("Percentage in Sample (%)")+
geom_alluvium(aes(fill = `Unique to TIL`))+
geom_stratum(color = "grey") +
geom_text(stat = "stratum",aes(label = after_stat(stratum)))+
theme_minimal()+
ggtitle("Cross-reactive TCR in Tumor Samples","Categorized by appearance in any blood samples")+
theme(text = element_text(size = 20),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.title.x = element_text(margin = margin(10, 0, 0, 0)),
axis.title.y = element_text(margin = margin(0, 10, 0, 0)),
axis.text.x = element_text(margin = margin(5, 0, 0, 0)),
axis.text.y = element_text(margin = margin(0, 5, 0, 0)))
CR_alluvium
CR_alluvium<-ggplot(Shared_Stromnes_annotated_alluvium,
aes(y = productive_frequency*100,
axis1 = sample_name,
axis2 = `Unique to TIL`,
axis3 = cross_reactive_viral))+
scale_x_discrete(limits = c('Sample',"Uniqueness","Cross-reactive Identity"),expand = c(0.2,0.05))+
#xlab("Shared TCRs")+
ylab("Percentage in Sample (%)")+
geom_alluvium(aes(fill = `Unique to TIL`))+
geom_stratum(color = "grey") +
geom_text(stat = "stratum",aes(fill = after_stat(stratum),label = after_stat(stratum)))+
theme_minimal()+
ggtitle("Cross-reactive TCR in Tumor Samples","Categorized by appearance in any blood samples")+
theme(text = element_text(size = 20),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.title.x = element_text(margin = margin(10, 0, 0, 0)),
axis.title.y = element_text(margin = margin(0, 10, 0, 0)),
axis.text.x = element_text(margin = margin(5, 0, 0, 0)),
axis.text.y = element_text(margin = margin(0, 5, 0, 0)))
CR_alluvium<-ggplot(Shared_Stromnes_annotated_alluvium,
aes(y = productive_frequency*100,
axis1 = sample_name,
axis2 = `Unique to TIL`,
axis3 = cross_reactive_viral))+
scale_x_discrete(limits = c('Sample',"Uniqueness","Cross-reactive Identity"),expand = c(0.2,0.05))+
#xlab("Shared TCRs")+
ylab("Percentage in Sample (%)")+
geom_alluvium(aes(fill = `Unique to TIL`))+
geom_stratum(color = "grey") +
geom_text(stat = "stratum",aes(color = after_stat(stratum),label = after_stat(stratum)))+
theme_minimal()+
ggtitle("Cross-reactive TCR in Tumor Samples","Categorized by appearance in any blood samples")+
theme(text = element_text(size = 20),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.title.x = element_text(margin = margin(10, 0, 0, 0)),
axis.title.y = element_text(margin = margin(0, 10, 0, 0)),
axis.text.x = element_text(margin = margin(5, 0, 0, 0)),
axis.text.y = element_text(margin = margin(0, 5, 0, 0)))
CR_alluvium
CR_alluvium<-ggplot(Shared_Stromnes_annotated_alluvium,
aes(y = productive_frequency*100,
axis1 = sample_name,
axis2 = `Unique to TIL`,
axis3 = cross_reactive_viral))+
scale_x_discrete(limits = c('Sample',"Uniqueness","Cross-reactive Identity"),expand = c(0.2,0.05))+
#xlab("Shared TCRs")+
ylab("Percentage in Sample (%)")+
geom_alluvium(aes(fill = `Unique to TIL`))+
geom_stratum(color = "grey") +
geom_text(stat = "stratum",aes(label = after_stat(stratum)))+
theme_minimal()+
ggtitle("Cross-reactive TCR in Tumor Samples","Categorized by appearance in any blood samples")+
theme(text = element_text(size = 20),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.title.x = element_text(margin = margin(10, 0, 0, 0)),
axis.title.y = element_text(margin = margin(0, 10, 0, 0)),
axis.text.x = element_text(margin = margin(5, 0, 0, 0)),
axis.text.y = element_text(margin = margin(0, 5, 0, 0)))
CR_alluvium
CR_alluvium<-ggplot(Shared_Stromnes_annotated_alluvium,
aes(y = productive_frequency*100,
axis1 = sample_name,
axis2 = `Unique to TIL`,
axis3 = cross_reactive_viral))+
scale_x_discrete(limits = c('Sample',"Uniqueness","Cross-reactive Identity"),expand = c(0.2,0.05))+
#xlab("Shared TCRs")+
ylab("Percentage in Sample (%)")+
geom_alluvium(aes(fill = `Unique to TIL`))+
geom_stratum(color = "grey") +
geom_text(stat = "stratum",aes(label = after_stat(stratum)))+
theme_classic()+
ggtitle("Cross-reactive TCR in Tumor Samples","Categorized by appearance in any blood samples")+
theme(text = element_text(size = 20),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.title.x = element_text(margin = margin(10, 0, 0, 0)),
axis.title.y = element_text(margin = margin(0, 10, 0, 0)),
axis.text.x = element_text(margin = margin(5, 0, 0, 0)),
axis.text.y = element_text(margin = margin(0, 5, 0, 0)))
CR_alluvium
CR_alluvium<-ggplot(Shared_Stromnes_annotated_alluvium,
aes(y = productive_frequency*100,
axis1 = sample_name,
axis2 = `Unique to TIL`,
axis3 = cross_reactive_viral))+
scale_x_discrete(limits = c('Sample',"Uniqueness","Cross-reactive Identity"),expand = c(0.2,0.05))+
#xlab("Shared TCRs")+
ylab("Percentage in Sample (%)")+
geom_alluvium(aes(fill = `Unique to TIL`))+
geom_stratum(color = "grey") +
geom_text(stat = "stratum",aes(label = after_stat(stratum)))+
theme_minimal()+
scale_y_continuous(breaks = seq(0, 20, by = 2.5))+
ggtitle("Cross-reactive TCR in Tumor Samples","Categorized by appearance in any blood samples")+
theme(text = element_text(size = 20),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.title.x = element_text(margin = margin(10, 0, 0, 0)),
axis.title.y = element_text(margin = margin(0, 10, 0, 0)),
axis.text.x = element_text(margin = margin(5, 0, 0, 0)),
axis.text.y = element_text(margin = margin(0, 5, 0, 0)))
CR_alluvium
CR_alluvium<-ggplot(Shared_Stromnes_annotated_alluvium,
aes(y = productive_frequency*100,
axis1 = sample_name,
axis2 = `Unique to TIL`,
axis3 = cross_reactive_viral))+
scale_x_discrete(limits = c('Sample',"Uniqueness","Cross-reactive Identity"),expand = c(0.2,0.05))+
#xlab("Shared TCRs")+
ylab("% of Sample ")+
geom_alluvium(aes(fill = `Unique to TIL`))+
geom_stratum(color = "grey") +
geom_text(stat = "stratum",aes(label = after_stat(stratum)))+
theme_minimal()+
scale_y_continuous(breaks = seq(0, 20, by = 2.5))+
ggtitle("Cross-reactive TCR in Tumor Samples","Categorized by appearance in any blood samples")+
theme(text = element_text(size = 20),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.title.x = element_text(margin = margin(10, 0, 0, 0)),
axis.title.y = element_text(margin = margin(0, 10, 0, 0)),
axis.text.x = element_text(margin = margin(5, 0, 0, 0)),
axis.text.y = element_text(margin = margin(0, 5, 0, 0)))
CR_alluvium
CR_alluvium<-ggplot(Shared_Stromnes_annotated_alluvium,
aes(y = productive_frequency*100,
axis1 = sample_name,
axis2 = `Unique to TIL`,
axis3 = cross_reactive_viral))+
scale_x_discrete(limits = c('Sample',"Uniqueness","Cross-reactive Identity"),expand = c(0.2,0.05))+
#xlab("Shared TCRs")+
ylab("% of Sample ")+
geom_alluvium(aes(fill = `Unique to TIL`))+
geom_stratum(color = "grey") +
geom_text(stat = "stratum",aes(label = after_stat(stratum)))+
theme_minimal()+
scale_y_continuous(breaks = seq(0, 20, by = 2.5))+
guides(fill=guide_legend(title="Uniqueness"))+
ggtitle("Cross-reactive TCR in Tumor Samples","Categorized by appearance in any blood samples")+
theme(text = element_text(size = 20),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.title.x = element_text(margin = margin(10, 0, 0, 0)),
axis.title.y = element_text(margin = margin(0, 10, 0, 0)),
axis.text.x = element_text(margin = margin(5, 0, 0, 0)),
axis.text.y = element_text(margin = margin(0, 5, 0, 0)))
CR_alluvium
install.packages("igraph")
install.packages("data.table")
install.packages("stringdist")
install.packages("data.table")
setwd("Y:/Files/JHU/Labs/Git_Repos/ALICE")
library(data.table)
S1d15<-fread("sample/S1_d15_V9_J2_7.tsv")
S1d0<-fread("sample/S1_d0_V9_J2_7.tsv")
S1<-list(d0=S1d0,d15=S1d15)
source("ALICE.R")
S1_alice<-ALICE_pipeline(DTlist=S1,folder="S1_res",cores=1,iter=10,nrec=1e5) #this takes few minutes to run
sapply(S1_alice,nrow)
View(S1_alice)
View(S1d0)
source("import.R")
dtlist<-import_immunoseq_pipeline(folder="Y:/Files/JHU/Labs/Git_Repos/Cancer_Antigen/Databases/Papers/Pancreatic/Riaz2017/Immunoseq/Pt17_pre.tsv",trim=3,Read_thres=0)
View(dtlist)
dtlist<-import_immunoseq_pipeline(folder="Y:/Files/JHU/Labs/Git_Repos/Cancer_Antigen/Databases/Papers/Pancreatic/Riaz2017/Immunoseq",trim=3,Read_thres=0)
View(S1d0)
